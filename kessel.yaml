sensor:  
  - platform: modbus_controller
    modbus_controller_id: ${modbus_controller_id}
    name: "${name} boiler temperature"
    id: ${name}_Kesseltemperatur
    register_type: read
    address: 0
    unit_of_measurement: "°C"
    device_class: "temperature"
    state_class: "measurement"
    value_type: U_WORD 
    filters:
      - multiply: 0.5

  - platform: modbus_controller
    modbus_controller_id: ${modbus_controller_id}
    name: "${name} exhaust gas temperature"
    id: ${name}_Abgastemperatur
    register_type: read
    address: 1
    unit_of_measurement: "°C"
    device_class: "temperature"
    state_class: "measurement"
    value_type: U_WORD 
 
  - platform: modbus_controller
    modbus_controller_id: ${modbus_controller_id}
    name: "${name} Hours remaining before ash emptying warning"
    id: ${name}_Verbleibende_Heizstunden_bis_zur_Asche_entleeren_Warnung
    register_type: read
    address: 86
    unit_of_measurement: "h"
    value_type: U_WORD

  - platform: modbus_controller
    modbus_controller_id: ${modbus_controller_id}
    name: "${name} Exhaust fan control"
    id: ${name}_Saugzug_Ansteuerung
    register_type: read
    address: 13
    unit_of_measurement: "%"
    value_type: U_WORD

  - platform: modbus_controller
    modbus_controller_id: ${modbus_controller_id}
    name: "${name} Exhaust fan speed"
    id: ${name}_Saugzugdrehzahl
    register_type: read
    address: 6
    unit_of_measurement: "rpm"
    value_type: U_WORD

  - platform: modbus_controller
    modbus_controller_id: ${modbus_controller_id}
    name: "${name} Oxygen controller"
    id: ${name}_Sauerstoffregler
    register_type: read
    address: 16
    unit_of_measurement: "%"
    value_type: U_WORD

  - platform: modbus_controller
    modbus_controller_id: ${modbus_controller_id}
    name: "${name} Residual O₂ level"
    id: ${name}_Restsauerstoffgehalt
    register_type: read
    address: 3
    unit_of_measurement: "%"
    accuracy_decimals: 1
    value_type: U_WORD
    filters:
      - multiply: 0.1
  
  - platform: modbus_controller
    modbus_controller_id: ${modbus_controller_id}
    name: "${name} Return temperature sensor"
    id: ${name}_Ruecklauffuehler
    register_type: read
    address: 9
    unit_of_measurement: "°C"
    device_class: "temperature"
    state_class: "measurement"
    value_type: U_WORD
    filters:
      - multiply: 0.5

  - platform: modbus_controller
    modbus_controller_id: ${modbus_controller_id}
    name: "${name} Primärluft"
    id: ${name}_Primaerluft
    register_type: read
    address: 11
    unit_of_measurement: "%"
    value_type: U_WORD

  - platform: modbus_controller
    modbus_controller_id: ${modbus_controller_id}
    name: "${name} Primary air controller"
    id: ${name}_Sekundaerluft
    register_type: read
    address: 12
    unit_of_measurement: "%"
    value_type: U_WORD

  - platform: modbus_controller
    modbus_controller_id: ${modbus_controller_id}
    name: "${name} Operating hours"
    id: ${name}_Betriebsstunden
    register_type: read
    address: 20
    unit_of_measurement: "h"
    value_type: U_WORD

  - platform: modbus_controller
    modbus_controller_id: ${modbus_controller_id}
    name: "${name} Operating hours since last service"
    id: ${name}_Stunden_seit_letzter_Wartung
    register_type: read
    address: 55
    unit_of_measurement: "h"
    value_type: U_WORD

  - platform: modbus_controller
    modbus_controller_id: ${modbus_controller_id}
    name: "${name} Operating hours in fire maintenance mode"
    id: ${name}_Betriebsstunden_in_der_Feuererhaltung
    register_type: read
    address: 24
    unit_of_measurement: "h"
    value_type: U_WORD

binary_sensor:
  - platform: template
    name: "${name} Boiler status: Heating"
    id: ${name}_Kesselzustand_Heizen
    lambda: |-
      if (id(${name}_Kesselzustand).state == "Heizen") {
        return true;
      } else {
        return false;
      }
